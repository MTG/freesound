"""
This was copied directly from django, but a small hack was added to allow different configuration of
markdown. It uses MARKDOWN_FILTER_SETTINGS from settings.py
"""

import markdown as markdown_package
import re

from django import template
from django.utils.encoding import force_str
from django.utils.safestring import mark_safe

register = template.Library()


@register.filter(is_safe=True)
def markdown(value, arg=""):
    """
    Runs Markdown over a given value, optionally using various
    extensions python-markdown supports.

    Syntax::

        {{ value|markdown:"extension1_name,extension2_name..." }}

    To enable safe mode, which strips raw HTML and only returns HTML
    generated by actual Markdown syntax, pass "safe" as the first
    extension in the list.
    """

    extensions = [e for e in arg.split(",") if e]
    extension_configs = {
        'wikilinks': [('base_url', '/help/'), ('end_url', '/'), ('html_class', 'wikilink')],
        'toc': [('anchorlink', True)]
    }

    md = markdown_package.Markdown(extensions=extensions, extension_configs=extension_configs)
    html_contents = md.convert(force_str(value))
    return mark_safe(html_contents)


@register.filter(is_safe=True)
def markdown_wiki(value):
    return markdown(value, arg="wikilinks,codehilite,toc")
